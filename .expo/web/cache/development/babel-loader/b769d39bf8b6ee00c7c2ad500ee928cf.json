{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport EnterLotController from \"./EnterLotController\";\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar deviceWidth = Dimensions.get('window').width;\n\nvar EnterLotView = function (_EnterLotController) {\n  _inherits(EnterLotView, _EnterLotController);\n\n  var _super = _createSuper(EnterLotView);\n\n  function EnterLotView() {\n    _classCallCheck(this, EnterLotView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(EnterLotView, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return _jsxs(View, {\n        style: styles.view,\n        children: [_jsx(View, {\n          style: styles.separator\n        }), _jsx(TextInput, {\n          style: styles.inputStyle,\n          label: \"Lot\",\n          autoComplete: false,\n          value: this.state.strLot,\n          onChangeText: function onChangeText(text) {\n            return _this.onChangeTextNumLot(text);\n          },\n          keyboardType: \"numeric\"\n        }), _jsx(HelperText, {\n          style: {\n            marginVertical: 10\n          },\n          type: \"error\",\n          children: this.state.error\n        }), _jsx(View, {\n          style: styles.separator\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            _this.onPressSubmit();\n          },\n          children: \"Submit\"\n        })]\n      });\n    }\n  }]);\n\n  return EnterLotView;\n}(EnterLotController);\n\nexport { EnterLotView as default };\nvar styles = StyleSheet.create({\n  view: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  separator: {\n    height: 20\n  },\n  inputStyle: {\n    width: deviceWidth * 0.7,\n    height: 50\n  }\n});","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/EnterLotView.tsx"],"names":["React","EnterLotController","TextInput","Button","HelperText","deviceWidth","Dimensions","get","width","EnterLotView","styles","view","separator","inputStyle","state","strLot","text","onChangeTextNumLot","marginVertical","error","onPressSubmit","StyleSheet","create","flex","alignItems","backgroundColor","height"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,kBAAP;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,QAA8C,oBAA9C;;;AACA,IAAIC,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA3C;;IAEqBC,Y;;;;;;;;;;;;;WACjB,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE;AAApB,UADJ,EAGI,KAAC,SAAD;AACA,UAAA,KAAK,EAAEF,MAAM,CAACG,UADd;AAEI,UAAA,KAAK,EAAC,KAFV;AAGI,UAAA,YAAY,EAAE,KAHlB;AAII,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,MAJtB;AAKI,UAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,mBAAkB,KAAI,CAACC,kBAAL,CAAwBD,IAAxB,CAAlB;AAAA,WALlB;AAMI,UAAA,YAAY,EAAE;AANlB,UAHJ,EAWI,KAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEE,YAAAA,cAAc,EAAE;AAAlB,WAAnB;AAA2C,UAAA,IAAI,EAAC,OAAhD;AAAA,oBACK,KAAKJ,KAAL,CAAWK;AADhB,UAXJ,EAcI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAET,MAAM,CAACE;AAApB,UAdJ,EAeI,KAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,WAAb;AAAyB,UAAA,OAAO,EAAE,mBAAM;AACpC,YAAA,KAAI,CAACQ,aAAL;AACH,WAFD;AAAA;AAAA,UAfJ;AAAA,QADJ;AAwBH;;;;EA1BqCnB,kB;;SAArBQ,Y;AA6BrB,IAAMC,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,IAAI,EAAE;AACFY,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,UAAU,EAAE,QAFV;AAGFC,IAAAA,eAAe,EAAE;AAHf,GADuB;AAM7Bb,EAAAA,SAAS,EAAE;AACPc,IAAAA,MAAM,EAAE;AADD,GANkB;AAS7Bb,EAAAA,UAAU,EAAE;AACRL,IAAAA,KAAK,EAAEH,WAAW,GAAG,GADb;AAERqB,IAAAA,MAAM,EAAE;AAFA;AATiB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Dimensions } from \"react-native\"\nimport EnterLotController from \"./EnterLotController\";\nimport { TextInput, Button, HelperText } from 'react-native-paper';\nlet deviceWidth = Dimensions.get('window').width\n\nexport default class EnterLotView extends EnterLotController {\n    render() {\n        return (\n            <View style={styles.view}>\n                <View style={styles.separator}></View>\n\n                <TextInput\n                style={styles.inputStyle}\n                    label=\"Lot\"\n                    autoComplete={false}\n                    value={this.state.strLot}\n                    onChangeText={(text: string) => this.onChangeTextNumLot(text)}\n                    keyboardType={\"numeric\"}\n                />\n                <HelperText style={{ marginVertical: 10 }} type=\"error\">\n                    {this.state.error}\n                </HelperText>\n                <View style={styles.separator}></View>\n                <Button mode=\"contained\" onPress={() => {\n                    this.onPressSubmit();\n                }}>\n                    Submit\n                </Button>\n\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        flex: 1,\n        alignItems: \"center\",\n        backgroundColor: \"white\",\n    },\n    separator: {\n        height: 20,\n    },\n    inputStyle: {\n        width: deviceWidth * 0.7,\n        height: 50\n    }\n});"]},"metadata":{},"sourceType":"module"}