{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport moment from 'moment';\n\nvar HomeController = function (_Component) {\n  _inherits(HomeController, _Component);\n\n  var _super = _createSuper(HomeController);\n\n  function HomeController(props) {\n    var _this;\n\n    _classCallCheck(this, HomeController);\n\n    _this = _super.call(this, props);\n\n    _this.setupAnArray = function () {\n      var _this$state = _this.state,\n          numLots = _this$state.numLots,\n          arrLot = _this$state.arrLot;\n\n      for (var i = 0; i < numLots; i++) {\n        var dic = {\n          id: \"\" + i,\n          carNum: \"\",\n          isAlloted: false,\n          inTime: new Date()\n        };\n        arrLot.push(dic);\n      }\n\n      _this.setState({});\n\n      console.log(\"this\", _this.state.arrLot);\n    };\n\n    _this.onChangeTextNumLot = function (val) {\n      _this.setState({\n        carNumber: val\n      });\n    };\n\n    _this.validateInput = function (strLot) {\n      if (strLot === '') {\n        _this.setState({\n          error: \"Please enter car number\"\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          error: \"\"\n        });\n\n        return true;\n      }\n    };\n\n    console.log(\"props lot\", props.route.params.item);\n    var today = new Date();\n    var start = moment(today);\n    var end = moment(\"Thu Apr 07 2022 10:00:25\");\n    var duration = moment.duration(start.diff(end));\n    var asMinutes = duration.asMinutes();\n    console.log(\"asMinutes\", asMinutes);\n    _this.state = {\n      numLots: props.route.params.item,\n      arrLot: [],\n      showDialog: false,\n      carNumber: '',\n      showPaymentDialog: false,\n      error: '',\n      dialogTitle: '',\n      dialogMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupAnArray();\n    }\n  }]);\n\n  return HomeController;\n}(Component);\n\nexport { HomeController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeController.tsx"],"names":["Component","moment","HomeController","props","setupAnArray","state","numLots","arrLot","i","dic","id","carNum","isAlloted","inTime","Date","push","setState","console","log","onChangeTextNumLot","val","carNumber","validateInput","strLot","error","route","params","item","today","start","end","duration","diff","asMinutes","showDialog","showPaymentDialog","dialogTitle","dialogMsg"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;IAiBqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;;AADoB,UA8BxBC,YA9BwB,GA8BT,YAAM;AACjB,wBAA4B,MAAKC,KAAjC;AAAA,UAAQC,OAAR,eAAQA,OAAR;AAAA,UAAiBC,MAAjB,eAAiBA,MAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAApB,EAA6BE,CAAC,EAA9B,EAAkC;AAC9B,YAAIC,GAAQ,GAAG;AACXC,UAAAA,EAAE,OAAKF,CADI;AAEXG,UAAAA,MAAM,EAAE,EAFG;AAGXC,UAAAA,SAAS,EAAE,KAHA;AAIXC,UAAAA,MAAM,EAAE,IAAIC,IAAJ;AAJG,SAAf;AAMAP,QAAAA,MAAM,CAACQ,IAAP,CAAYN,GAAZ;AACH;;AAED,YAAKO,QAAL,CAAc,EAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAKb,KAAL,CAAWE,MAA/B;AACH,KA7CuB;;AAAA,UA+CxBY,kBA/CwB,GA+CH,UAACC,GAAD,EAAiB;AAClC,YAAKJ,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAED;AAAb,OAAd;AACH,KAjDuB;;AAAA,UAmDxBE,aAnDwB,GAmDR,UAACC,MAAD,EAAoB;AAChC,UAAIA,MAAM,KAAK,EAAf,EAAmB;AACf,cAAKP,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACA,eAAO,KAAP;AACH,OAHD,MAGO;AACH,cAAKR,QAAL,CAAc;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACA,eAAO,IAAP;AACH;AACJ,KA3DuB;;AAEpBP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,IAA5C;AAEA,QAAIC,KAAK,GAAG,IAAId,IAAJ,EAAZ;AAGA,QAAIe,KAAK,GAAG5B,MAAM,CAAC2B,KAAD,CAAlB;AACA,QAAIE,GAAG,GAAG7B,MAAM,CAAC,0BAAD,CAAhB;AAEA,QAAI8B,QAAQ,GAAG9B,MAAM,CAAC8B,QAAP,CAAgBF,KAAK,CAACG,IAAN,CAAWF,GAAX,CAAhB,CAAf;AACA,QAAIG,SAAS,GAAGF,QAAQ,CAACE,SAAT,EAAhB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBe,SAAzB;AAEA,UAAK5B,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEH,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,IADnB;AAETpB,MAAAA,MAAM,EAAE,EAFC;AAGT2B,MAAAA,UAAU,EAAE,KAHH;AAITb,MAAAA,SAAS,EAAE,EAJF;AAKTc,MAAAA,iBAAiB,EAAC,KALT;AAMTX,MAAAA,KAAK,EAAE,EANE;AAOTY,MAAAA,WAAW,EAAE,EAPJ;AAQTC,MAAAA,SAAS,EAAE;AARF,KAAb;AAdoB;AAwBvB;;;;WAED,6BAAoB;AAChB,WAAKjC,YAAL;AACH;;;;EA7BuCJ,S;;SAAvBE,c","sourcesContent":["import { Component } from 'react'\nimport { lot } from '../model/lot';\nimport moment from 'moment'\n\ninterface props {\n    navigation: any;\n}\n\ninterface state {\n    numLots: number;\n    arrLot: Array<lot>;\n    showDialog: boolean;\n    showPaymentDialog: boolean;\n    carNumber: string;\n    error: string;\n    dialogTitle: string;\n    dialogMsg: string;\n}\n\nexport default class HomeController extends Component<props, state> {\n    constructor(props: any) {\n        super(props);\n        console.log(\"props lot\", props.route.params.item);\n\n        let today = new Date();\n\n\n        var start = moment(today); // another date\n        var end = moment(\"Thu Apr 07 2022 10:00:25\"); // another date\n\n        var duration = moment.duration(start.diff(end));\n        var asMinutes = duration.asMinutes()\n        console.log(\"asMinutes\", asMinutes)\n\n        this.state = {\n            numLots: props.route.params.item,\n            arrLot: [],\n            showDialog: false,\n            carNumber: '',\n            showPaymentDialog:false,\n            error: '',\n            dialogTitle: '',\n            dialogMsg: '',\n        }\n    }\n\n    componentDidMount() {\n        this.setupAnArray();\n    }\n\n    setupAnArray = () => {\n        const { numLots, arrLot } = this.state;\n\n        for (let i = 0; i < numLots; i++) {\n            let dic: lot = {\n                id: `${i}`,\n                carNum: \"\",\n                isAlloted: false,\n                inTime: new Date(),\n            }\n            arrLot.push(dic);\n        }\n\n        this.setState({});\n        console.log(\"this\", this.state.arrLot);\n    }\n\n    onChangeTextNumLot = (val: string) => {\n        this.setState({ carNumber: val });\n    }\n\n    validateInput = (strLot: string) => {\n        if (strLot === '') {\n            this.setState({ error: \"Please enter car number\" })\n            return false;\n        } else {\n            this.setState({ error: \"\" })\n            return true;\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}