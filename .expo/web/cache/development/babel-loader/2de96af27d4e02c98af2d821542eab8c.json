{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\n\nvar HomeController = function (_Component) {\n  _inherits(HomeController, _Component);\n\n  var _super = _createSuper(HomeController);\n\n  function HomeController(props) {\n    var _this;\n\n    _classCallCheck(this, HomeController);\n\n    _this = _super.call(this, props);\n\n    _this.setupAnArray = function () {\n      var _this$state = _this.state,\n          numLots = _this$state.numLots,\n          arrLot = _this$state.arrLot;\n      var tmp = numLots;\n      var temp = [];\n\n      for (var i = 0; i < numLots; i++) {\n        var dic = {\n          id: \"A\" + (\"\" + i),\n          carNum: \"\",\n          isAlloted: false,\n          inTime: \"\",\n          outTime: \"\"\n        };\n        arrLot.push(dic);\n      }\n\n      _this.setState({});\n\n      console.log(\"this\", _this.state.arrLot);\n    };\n\n    _this.onPressAddCar = function (carNum) {\n      var filter = _this.state.arrLot.filter(function (item) {\n        return item.isAlloted == false;\n      });\n\n      if (filter.length > 0) {\n        var min = 0;\n        var max = _this.state.numLots - 1;\n        var random = min + Math.random() * (max - min);\n        console.log(\"random\", random);\n        var index = Math.floor(random);\n        ;\n        var tmp = _this.state.arrLot[index];\n        console.log(\"tmp\", tmp);\n\n        if (tmp.isAlloted) {\n          console.log(\"yaha aaya\");\n\n          _this.onPressAddCar(carNum);\n        } else {\n          var name = carNum + (\"\" + index);\n          tmp.isAlloted = true;\n          tmp.carNum = name;\n          _this.state.arrLot[index] = tmp;\n\n          _this.setState({});\n        }\n      } else {}\n    };\n\n    _this.onPressExitCar = function (index) {};\n\n    console.log(\"props lot\", props.route.params.item);\n    _this.state = {\n      numLots: props.route.params.item,\n      arrLot: [],\n      showDialog: false\n    };\n    return _this;\n  }\n\n  _createClass(HomeController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupAnArray();\n    }\n  }]);\n\n  return HomeController;\n}(Component);\n\nexport { HomeController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeController.tsx"],"names":["Component","HomeController","props","setupAnArray","state","numLots","arrLot","tmp","temp","i","dic","id","carNum","isAlloted","inTime","outTime","push","setState","console","log","onPressAddCar","filter","item","length","min","max","random","Math","index","floor","name","onPressExitCar","route","params","showDialog"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;IAaqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;;AADoB,UAexBC,YAfwB,GAeT,YAAM;AACjB,wBAA4B,MAAKC,KAAjC;AAAA,UAAQC,OAAR,eAAQA,OAAR;AAAA,UAAiBC,MAAjB,eAAiBA,MAAjB;AACA,UAAIC,GAAW,GAAGF,OAAlB;AACA,UAAIG,IAAgB,GAAG,EAAvB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAApB,EAA6BI,CAAC,EAA9B,EAAkC;AAC9B,YAAIC,GAAQ,GAAG;AACXC,UAAAA,EAAE,EAAE,YAASF,CAAT,CADO;AAEXG,UAAAA,MAAM,EAAE,EAFG;AAGXC,UAAAA,SAAS,EAAE,KAHA;AAIXC,UAAAA,MAAM,EAAE,EAJG;AAKXC,UAAAA,OAAO,EAAE;AALE,SAAf;AAOAT,QAAAA,MAAM,CAACU,IAAP,CAAYN,GAAZ;AACH;;AAED,YAAKO,QAAL,CAAc,EAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAKf,KAAL,CAAWE,MAA/B;AACH,KAhCuB;;AAAA,UAkCxBc,aAlCwB,GAkCR,UAACR,MAAD,EAAoB;AAEhC,UAAIS,MAAM,GAAG,MAAKjB,KAAL,CAAWE,MAAX,CAAkBe,MAAlB,CAAyB,UAASC,IAAT,EAAc;AAChD,eAAOA,IAAI,CAACT,SAAL,IAAkB,KAAzB;AACF,OAFW,CAAb;;AAIC,UAAGQ,MAAM,CAACE,MAAP,GAAgB,CAAnB,EAAsB;AAEvB,YAAIC,GAAW,GAAG,CAAlB;AACA,YAAIC,GAAW,GAAI,MAAKrB,KAAL,CAAWC,OAAX,GAAqB,CAAxC;AAEA,YAAIqB,MAAe,GAAGF,GAAG,GAAIG,IAAI,CAACD,MAAL,MAAiBD,GAAG,GAAGD,GAAvB,CAA7B;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,MAAtB;AACA,YAAIE,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAWH,MAAX,CAAZ;AAA+B;AAE/B,YAAInB,GAAS,GAAG,MAAKH,KAAL,CAAWE,MAAX,CAAkBsB,KAAlB,CAAhB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBZ,GAAnB;;AACA,YAAIA,GAAG,CAACM,SAAR,EAAmB;AACfK,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,gBAAKC,aAAL,CAAmBR,MAAnB;AACH,SAHD,MAGO;AACH,cAAIkB,IAAa,GAAGlB,MAAM,SAAMgB,KAAN,CAA1B;AACArB,UAAAA,GAAG,CAACM,SAAJ,GAAgB,IAAhB;AACAN,UAAAA,GAAG,CAACK,MAAJ,GAAakB,IAAb;AACA,gBAAK1B,KAAL,CAAWE,MAAX,CAAkBsB,KAAlB,IAA2BrB,GAA3B;;AACA,gBAAKU,QAAL,CAAc,EAAd;AACH;AACJ,OArBI,MAqBE,CAEN;AACA,KAhEuB;;AAAA,UAkExBc,cAlEwB,GAkEP,UAACH,KAAD,EAAmB,CAEnC,CApEuB;;AAEpBV,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,KAAK,CAAC8B,KAAN,CAAYC,MAAZ,CAAmBX,IAA5C;AAEA,UAAKlB,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEH,KAAK,CAAC8B,KAAN,CAAYC,MAAZ,CAAmBX,IADnB;AAEThB,MAAAA,MAAM,EAAE,EAFC;AAGT4B,MAAAA,UAAU,EAAE;AAHH,KAAb;AAJoB;AASvB;;;;WAED,6BAAoB;AAChB,WAAK/B,YAAL;AACH;;;;EAduCH,S;;SAAvBC,c","sourcesContent":["import { Component } from 'react'\nimport { lot } from '../model/lot';\n\ninterface props {\n    navigation: any;\n}\n\ninterface state {\n    numLots: number;\n    arrLot: Array<lot>;\n    showDialog: boolean;\n}\n\nexport default class HomeController extends Component<props, state> {\n    constructor(props: any) {\n        super(props);\n        console.log(\"props lot\", props.route.params.item);\n\n        this.state = {\n            numLots: props.route.params.item,\n            arrLot: [],\n            showDialog: false\n        }\n    }\n\n    componentDidMount() {\n        this.setupAnArray();\n    }\n\n    setupAnArray = () => {\n        const { numLots, arrLot } = this.state;\n        let tmp: number = numLots;\n        var temp: Array<lot> = [];\n        for (let i = 0; i < numLots; i++) {\n            let dic: lot = {\n                id: \"A\" + `${i}`,\n                carNum: \"\",\n                isAlloted: false,\n                inTime: \"\",\n                outTime: \"\",\n            }\n            arrLot.push(dic);\n        }\n\n        this.setState({});\n        console.log(\"this\", this.state.arrLot);\n    }\n\n    onPressAddCar = (carNum: string) => {\n\n        let filter = this.state.arrLot.filter(function(item){\n            return item.isAlloted == false;\n         });\n\n         if(filter.length > 0) {\n\n        let min: number = 0;\n        let max: number = (this.state.numLots - 1);\n\n        let random : number = min + (Math.random() * (max - min))\n        console.log(\"random\", random);\n        var index = Math.floor(random);; //10\n\n        var tmp : lot = this.state.arrLot[index];\n        console.log(\"tmp\", tmp);\n        if (tmp.isAlloted) {\n            console.log(\"yaha aaya\");\n            this.onPressAddCar(carNum);\n        } else {\n            let name : string = carNum + `${index}`;\n            tmp.isAlloted = true;\n            tmp.carNum = name;\n            this.state.arrLot[index] = tmp\n            this.setState({});\n        }\n    } else {\n\n    }\n    }\n\n    onPressExitCar = (index: number) => {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}