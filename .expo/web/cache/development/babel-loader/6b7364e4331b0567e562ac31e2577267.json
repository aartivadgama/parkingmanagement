{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent } from 'react';\n\nvar EnterLotController = function (_PureComponent) {\n  _inherits(EnterLotController, _PureComponent);\n\n  var _super = _createSuper(EnterLotController);\n\n  function EnterLotController(props) {\n    var _this;\n\n    _classCallCheck(this, EnterLotController);\n\n    _this = _super.call(this, props);\n\n    _this.validateInput = function (num) {\n      if (num === 0) {\n        return false;\n      } else {\n        if (num < 10) {\n          return false;\n        }\n\n        return true;\n      }\n    };\n\n    _this.onChangeTextNumLot = function (num) {\n      _this.setState({\n        numLot: num\n      });\n    };\n\n    _this.state = {\n      numLot: 0\n    };\n    return _this;\n  }\n\n  return _createClass(EnterLotController);\n}(PureComponent);\n\nexport { EnterLotController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/EnterLotController.tsx"],"names":["PureComponent","EnterLotController","props","validateInput","num","onChangeTextNumLot","setState","numLot","state"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,OAA9B;;IAUqBC,kB;;;;;AACjB,8BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;;AADoB,UAOxBC,aAPwB,GAOR,UAACC,GAAD,EAAkB;AAC9B,UAAGA,GAAG,KAAK,CAAX,EAAc;AACV,eAAO,KAAP;AACH,OAFD,MAEO;AACH,YAAGA,GAAG,GAAI,EAAV,EAAc;AACV,iBAAO,KAAP;AACH;;AACD,eAAO,IAAP;AACH;AACJ,KAhBuB;;AAAA,UAkBxBC,kBAlBwB,GAkBH,UAACD,GAAD,EAAkB;AACnC,YAAKE,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEH;AAAT,OAAd;AACH,KApBuB;;AAEpB,UAAKI,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AADC,KAAb;AAFoB;AAKvB;;;EAN2CP,a;;SAA3BC,kB","sourcesContent":["import { PureComponent } from 'react'\n\ninterface props {\n    navigation: any\n}\n\ninterface state {\n    numLot: number;\n}\n\nexport default class EnterLotController extends PureComponent<props, state> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            numLot: 0,\n        }\n    }\n\n    validateInput = (num : number) => {\n        if(num === 0) {\n            return false;\n        } else {\n            if(num <  10) {\n                return false;\n            } \n            return true;\n        }\n    }\n\n    onChangeTextNumLot = (num : number) => {\n        this.setState({numLot: num});\n    }\n}"]},"metadata":{},"sourceType":"module"}