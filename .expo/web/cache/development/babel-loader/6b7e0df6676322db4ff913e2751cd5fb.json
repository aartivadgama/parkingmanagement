{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\n\nvar HomeController = function (_Component) {\n  _inherits(HomeController, _Component);\n\n  var _super = _createSuper(HomeController);\n\n  function HomeController(props) {\n    var _this;\n\n    _classCallCheck(this, HomeController);\n\n    _this = _super.call(this, props);\n\n    _this.setupAnArray = function () {\n      var _this$state = _this.state,\n          numLots = _this$state.numLots,\n          arrLot = _this$state.arrLot;\n\n      for (var i = 0; i < numLots; i++) {\n        var dic = {\n          id: \"\" + i,\n          carNum: \"\",\n          isAlloted: false,\n          inTime: \"\",\n          outTime: \"\"\n        };\n        arrLot.push(dic);\n      }\n\n      _this.setState({});\n\n      console.log(\"this\", _this.state.arrLot);\n    };\n\n    _this.onChangeTextNumLot = function (val) {\n      _this.setState({\n        carNumber: val\n      });\n    };\n\n    _this.onPressAddCar = function (carNum) {\n      var filter = _this.state.arrLot.filter(function (item) {\n        return item.isAlloted == false;\n      });\n\n      if (filter.length > 0) {\n        var min = 0;\n        var max = filter.length - 1;\n        var random = min + Math.random() * (max - min);\n        console.log(\"random\", random);\n        var index = Math.floor(random);\n        ;\n        var tmp = filter[index];\n        var arrIndex = Number(tmp.id);\n        var name = carNum + (\"\" + index);\n        tmp.isAlloted = true;\n        tmp.carNum = name;\n        _this.state.arrLot[arrIndex] = tmp;\n\n        _this.setState({});\n      } else {\n        _this.setState({\n          showDialog: true\n        });\n      }\n    };\n\n    _this.onPressExitCar = function (index) {};\n\n    console.log(\"props lot\", props.route.params.item);\n    _this.state = {\n      numLots: props.route.params.item,\n      arrLot: [],\n      showDialog: false,\n      carNumber: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupAnArray();\n    }\n  }]);\n\n  return HomeController;\n}(Component);\n\nexport { HomeController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeController.tsx"],"names":["Component","HomeController","props","setupAnArray","state","numLots","arrLot","i","dic","id","carNum","isAlloted","inTime","outTime","push","setState","console","log","onChangeTextNumLot","val","carNumber","onPressAddCar","filter","item","length","min","max","random","Math","index","floor","tmp","arrIndex","Number","name","showDialog","onPressExitCar","route","params"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { lot } from '../model/lot';\n\ninterface props {\n    navigation: any;\n}\n\ninterface state {\n    numLots: number;\n    arrLot: Array<lot>;\n    showDialog: boolean;\n    carNumber: string;\n    erro\n}\n\nexport default class HomeController extends Component<props, state> {\n    constructor(props: any) {\n        super(props);\n        console.log(\"props lot\", props.route.params.item);\n\n        this.state = {\n            numLots: props.route.params.item,\n            arrLot: [],\n            showDialog: false,\n            carNumber: '',\n        }\n    }\n\n    componentDidMount() {\n        this.setupAnArray();\n    }\n\n    setupAnArray = () => {\n        const { numLots, arrLot } = this.state;\n\n        for (let i = 0; i < numLots; i++) {\n            let dic: lot = {\n                id: `${i}`,\n                carNum: \"\",\n                isAlloted: false,\n                inTime: \"\",\n                outTime: \"\",\n            }\n            arrLot.push(dic);\n        }\n\n        this.setState({});\n        console.log(\"this\", this.state.arrLot);\n    }\n\n    onChangeTextNumLot = (val: string) => {\n        this.setState({ carNumber: val });\n    }\n\n\n    onPressAddCar = (carNum: string) => {\n\n        let filter = this.state.arrLot.filter(function (item) {\n            return item.isAlloted == false;\n        });\n\n        if (filter.length > 0) {\n\n            let min: number = 0;\n            let max: number = (filter.length - 1);\n\n            let random: number = min + (Math.random() * (max - min))\n            console.log(\"random\", random);\n            var index = Math.floor(random);; //10\n\n            var tmp: lot = filter[index];\n            let arrIndex = Number(tmp.id);\n\n            let name: string = carNum + `${index}`;\n            tmp.isAlloted = true;\n            tmp.carNum = name;\n            this.state.arrLot[arrIndex] = tmp\n            this.setState({});\n\n        } else {\n            this.setState({ showDialog: true });\n        }\n    }\n\n    onPressExitCar = (index: number) => {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}