{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Text } from \"react-native-paper\";\nimport HomeController from \"./HomeController\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Paragraph, Dialog, Portal } from 'react-native-paper';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar deviceWidth = Dimensions.get('window').width;\nvar column = 3;\nvar columnHeight = 100;\n\nvar HomeView = function (_HomeController) {\n  _inherits(HomeView, _HomeController);\n\n  var _super = _createSuper(HomeView);\n\n  function HomeView() {\n    var _this;\n\n    _classCallCheck(this, HomeView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItem = function (item) {\n      console.log(\"item\", item);\n      return _jsx(View, {\n        style: styles.viewStyle,\n        children: _jsxs(Text, {\n          children: [\"y\", item.id]\n        })\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"Hiiiii, this.state.arrLot\", this.state.arrLot.length);\n      return _jsxs(View, {\n        style: styles.view,\n        children: [_jsx(View, {\n          style: styles.separator\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            _this2.onPressAddCar(\"Aaartiii\");\n          },\n          children: \"Add Car\"\n        }), _jsx(View, {\n          style: styles.separator\n        }), _jsx(FlatList, {\n          style: {\n            width: deviceWidth * 0.8\n          },\n          extraData: this.state,\n          data: this.state.arrLot,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n                index = _ref.index;\n            return _jsxs(View, {\n              style: styles.viewStyle,\n              children: [_jsx(Button, {\n                icon: \"logout\",\n                onPress: function onPress() {},\n                children: \"Exit\"\n              }), item.isAlloted ? _jsx(Icon, {\n                name: \"car\",\n                size: 35,\n                color: \"#00000\"\n              }) : _jsx(Icon, {\n                name: \"camera\",\n                size: 35,\n                color: \"#00000\"\n              })]\n            });\n          },\n          numColumns: column,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          }\n        }), _jsx(Portal, {\n          children: _jsxs(Dialog, {\n            visible: this.state.showDialog,\n            onDismiss: function onDismiss() {},\n            children: [_jsx(Dialog.Title, {\n              children: \"Alert\"\n            }), _jsx(Dialog.Content, {\n              children: _jsx(Paragraph, {\n                children: \"This is simple dialog\"\n              })\n            }), _jsx(Dialog.Actions, {\n              children: _jsx(Button, {\n                onPress: function onPress() {},\n                children: \"Done\"\n              })\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return HomeView;\n}(HomeController);\n\nexport { HomeView as default };\nvar styles = StyleSheet.create({\n  view: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: 'white'\n  },\n  viewAddCar: {\n    flexDirection: \"row\"\n  },\n  separator: {\n    height: 20\n  },\n  viewStyle: {\n    height: columnHeight,\n    margin: 10,\n    padding: 10,\n    backgroundColor: \"#d1d1d1\",\n    alignItems: \"center\",\n    width: (deviceWidth * 0.7 - column * 10) / column\n  },\n  icon: {\n    height: columnHeight,\n    margin: 10,\n    padding: 10,\n    width: (deviceWidth * 0.7 - column * 10) / column\n  }\n});","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeView.tsx"],"names":["React","Button","Text","HomeController","Icon","Paragraph","Dialog","Portal","deviceWidth","Dimensions","get","width","column","columnHeight","HomeView","renderItem","item","console","log","styles","viewStyle","id","state","arrLot","length","view","separator","onPressAddCar","index","isAlloted","toString","showDialog","StyleSheet","create","flex","alignItems","backgroundColor","viewAddCar","flexDirection","height","margin","padding","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, FlatList, Dimensions } from \"react-native\"\nimport { Button, Text } from \"react-native-paper\";\nimport HomeController from \"./HomeController\";\nimport { lot } from \"../model/lot\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Paragraph, Dialog, Portal, Provider } from 'react-native-paper';\n\nlet deviceWidth = Dimensions.get('window').width;\nlet column: number = 3;\nlet columnHeight: number = 100;\n\nexport default class HomeView extends HomeController {\n\n    renderItem = (item: lot) => {\n        console.log(\"item\", item)\n        return (\n            <View style={styles.viewStyle}>\n                <Text>y{item.id}</Text>\n            </View>\n        );\n    }\n\n    render() {\n        console.log(\"Hiiiii, this.state.arrLot\", this.state.arrLot.length);\n        return (\n            <View style={styles.view}>\n                <View style={styles.separator} />\n                <Button mode=\"contained\" onPress={() => {\n                    this.onPressAddCar(\"Aaartiii\");\n                }}>\n                    Add Car\n                </Button>\n                <View style={styles.separator} />\n\n                <FlatList\n                    style={{ width: deviceWidth * 0.8 }}\n                    extraData={this.state}\n                    data={this.state.arrLot}\n                    renderItem={({ item, index }) => {\n                        return (\n                            <View style={styles.viewStyle}>\n                                <Button icon=\"logout\" onPress={() => {\n\n                                }}>\n                                    Exit\n                                </Button>\n                                {item.isAlloted ?\n                                    <Icon name=\"car\" size={35} color=\"#00000\" />\n                                    : <Icon name=\"camera\" size={35} color=\"#00000\" />\n\n                                }\n                            </View>\n                        );\n                    }}\n                    numColumns={column}\n                    keyExtractor={(item, index) => index.toString()}\n                />\n\n                <Portal>\n                    <Dialog visible={this.state.showDialog} onDismiss={() => { }}>\n                        <Dialog.Title>Alert</Dialog.Title>\n                        <Dialog.Content>\n                            <Paragraph>This is simple dialog</Paragraph>\n                        </Dialog.Content>\n                        <Dialog.Actions>\n                            <Button onPress={() => { }}>Done</Button>\n                        </Dialog.Actions>\n                    </Dialog>\n                </Portal>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    view: {\n        flex: 1,\n        alignItems: \"center\",\n        backgroundColor: 'white',\n    },\n    viewAddCar: {\n        flexDirection: \"row\",\n    },\n    separator: {\n        height: 20,\n    },\n    viewStyle: {\n        height: columnHeight,\n        margin: 10,\n        padding: 10,\n        backgroundColor: \"#d1d1d1\",\n        alignItems: \"center\",\n        width: ((deviceWidth * 0.7) - (column * 10)) / column,\n    },\n    icon: {\n        height: columnHeight,\n        margin: 10,\n        padding: 10,\n        width: ((deviceWidth * 0.7) - (column * 10)) / column,\n    }\n});"]},"metadata":{},"sourceType":"module"}