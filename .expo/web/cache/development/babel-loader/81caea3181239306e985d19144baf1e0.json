{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\n\nvar HomeController = function (_Component) {\n  _inherits(HomeController, _Component);\n\n  var _super = _createSuper(HomeController);\n\n  function HomeController(props) {\n    var _this;\n\n    _classCallCheck(this, HomeController);\n\n    _this = _super.call(this, props);\n\n    _this.setupAnArray = function () {\n      var _this$state = _this.state,\n          numLots = _this$state.numLots,\n          arrLot = _this$state.arrLot;\n      var tmp = numLots;\n      var temp = [];\n\n      for (var i = 0; i < numLots; i++) {\n        var dic = {\n          id: \"A\" + (\"\" + i),\n          carNum: \"\",\n          isAlloted: false,\n          inTime: \"\",\n          outTime: \"\"\n        };\n        arrLot.push(dic);\n      }\n\n      _this.setState({});\n\n      console.log(\"this\", _this.state.arrLot);\n    };\n\n    _this.onPressAddCar = function () {\n      var min = 1;\n      var max = 100;\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        random: _this.min + Math.random() * (_this.max - _this.min)\n      });\n    };\n\n    _this.onPressExitCar = function (index) {};\n\n    console.log(\"props lot\", props.route.params.item);\n    _this.state = {\n      numLots: props.route.params.item,\n      arrLot: []\n    };\n    return _this;\n  }\n\n  _createClass(HomeController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupAnArray();\n    }\n  }]);\n\n  return HomeController;\n}(Component);\n\nexport { HomeController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeController.tsx"],"names":["Component","HomeController","props","setupAnArray","state","numLots","arrLot","tmp","temp","i","dic","id","carNum","isAlloted","inTime","outTime","push","setState","console","log","onPressAddCar","min","max","handleClick","random","Math","onPressExitCar","index","route","params","item"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;;IAYqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,8BAAMA,KAAN;;AADoB,UAcxBC,YAdwB,GAcT,YAAM;AACjB,wBAA0B,MAAKC,KAA/B;AAAA,UAAOC,OAAP,eAAOA,OAAP;AAAA,UAAgBC,MAAhB,eAAgBA,MAAhB;AACA,UAAIC,GAAY,GAAGF,OAAnB;AACA,UAAIG,IAAiB,GAAG,EAAxB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,OAAnB,EAA4BI,CAAC,EAA7B,EAAgC;AAC5B,YAAIC,GAAS,GAAG;AACZC,UAAAA,EAAE,EAAG,YAASF,CAAT,CADO;AAEZG,UAAAA,MAAM,EAAE,EAFI;AAGZC,UAAAA,SAAS,EAAE,KAHC;AAIZC,UAAAA,MAAM,EAAE,EAJI;AAKZC,UAAAA,OAAO,EAAC;AALI,SAAhB;AAOAT,QAAAA,MAAM,CAACU,IAAP,CAAYN,GAAZ;AACH;;AAED,YAAKO,QAAL,CAAc,EAAd;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAKf,KAAL,CAAWE,MAA/B;AACH,KA/BuB;;AAAA,UAiCxBc,aAjCwB,GAiCR,YAAM;AACnB,UAAIC,GAAY,GAAG,CAAnB;AACC,UAAIC,GAAY,GAAG,GAAnB;AAIH,KAvCuB;;AAAA,UAyCxBC,WAzCwB,GAyCV,YAAM;AAChB,YAAKN,QAAL,CAAc;AAACO,QAAAA,MAAM,EAAE,MAAKH,GAAL,GAAYI,IAAI,CAACD,MAAL,MAAiB,MAAKF,GAAL,GAAW,MAAKD,GAAjC;AAArB,OAAd;AACD,KA3CqB;;AAAA,UA6CxBK,cA7CwB,GA6CP,UAACC,KAAD,EAAoB,CAEpC,CA/CuB;;AAEpBT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBjB,KAAK,CAAC0B,KAAN,CAAYC,MAAZ,CAAmBC,IAA5C;AAEA,UAAK1B,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEH,KAAK,CAAC0B,KAAN,CAAYC,MAAZ,CAAmBC,IADnB;AAETxB,MAAAA,MAAM,EAAC;AAFE,KAAb;AAJoB;AAQvB;;;;WAED,6BAAoB;AAChB,WAAKH,YAAL;AACH;;;;EAbuCH,S;;SAAvBC,c","sourcesContent":["import { Component } from 'react'\nimport {lot} from '../model/lot';\n\ninterface props {\n    navigation: any;\n}\n\ninterface state {\n    numLots : number;\n    arrLot: Array<lot>;\n}\n\nexport default class HomeController extends Component<props, state> {\n    constructor(props: any) {\n        super(props);\n        console.log(\"props lot\", props.route.params.item);\n\n        this.state = {\n            numLots: props.route.params.item,\n            arrLot:[],\n        }\n    }\n\n    componentDidMount() {\n        this.setupAnArray();\n    }\n\n    setupAnArray = () => {\n        const {numLots, arrLot} = this.state;\n        let tmp : number = numLots;\n        var temp : Array<lot> = [] ;\n        for(let i = 0; i < numLots; i++){\n            let dic : lot = {\n                id:  \"A\" + `${i}`,\n                carNum: \"\",\n                isAlloted: false,\n                inTime: \"\",\n                outTime:\"\",\n            }\n            arrLot.push(dic);\n        }\n\n        this.setState({});\n        console.log(\"this\", this.state.arrLot);\n    }\n\n    onPressAddCar = () => {\n       let min : number = 1;\n        let max : number = 100;\n      \n       \n      \n    }\n\n    handleClick = () => {\n        this.setState({random: this.min + (Math.random() * (this.max - this.min))});\n      };\n\n    onPressExitCar = (index : number) => {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}