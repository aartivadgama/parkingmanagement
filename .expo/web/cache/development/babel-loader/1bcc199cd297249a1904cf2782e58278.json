{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport moment from 'moment';\n\nvar HomeController = function (_Component) {\n  _inherits(HomeController, _Component);\n\n  var _super = _createSuper(HomeController);\n\n  function HomeController(props) {\n    var _this;\n\n    _classCallCheck(this, HomeController);\n\n    _this = _super.call(this, props);\n\n    _this.setupAnArray = function () {\n      var _this$state = _this.state,\n          numLots = _this$state.numLots,\n          arrLot = _this$state.arrLot;\n\n      for (var i = 0; i < numLots; i++) {\n        var dic = {\n          id: \"\" + i,\n          carNum: \"\",\n          isAlloted: false,\n          inTime: new Date()\n        };\n        arrLot.push(dic);\n      }\n\n      _this.setState({});\n\n      console.log(\"this\", _this.state.arrLot);\n    };\n\n    _this.onChangeTextNumLot = function (val) {\n      _this.setState({\n        carNumber: val\n      });\n    };\n\n    _this.validateInput = function (strLot) {\n      if (strLot === '') {\n        _this.setState({\n          error: \"Please enter car number\"\n        });\n\n        return false;\n      } else {\n        _this.setState({\n          error: \"\"\n        });\n\n        return true;\n      }\n    };\n\n    _this.onPressAddCar = function () {\n      var name = _this.state.carNumber;\n\n      var validate = _this.validateInput(name);\n\n      if (validate) {\n        var filter = _this.state.arrLot.filter(function (item) {\n          return item.isAlloted == false;\n        });\n\n        if (filter.length > 0) {\n          var min = 0;\n          var max = filter.length - 1;\n          var random = min + Math.random() * (max - min);\n          console.log(\"random\", random);\n          var index = Math.floor(random);\n          ;\n          var tmp = filter[index];\n          var arrIndex = Number(tmp.id);\n          tmp.isAlloted = true;\n          tmp.carNum = name;\n          tmp.inTime = new Date();\n          _this.state.arrLot[arrIndex] = tmp;\n\n          _this.setState({\n            carNumber: \"\"\n          });\n        } else {\n          _this.setState({\n            showDialog: true,\n            carNumber: \"\"\n          });\n        }\n      }\n    };\n\n    _this.onPressExitCar = function (index) {\n      var obj = _this.state.arrLot[index];\n      var endDate = new Date();\n      var start = moment(obj.inTime);\n      var end = moment(endDate);\n      var duration = moment.duration(start.diff(end));\n      var asMinutes = duration.asMinutes();\n      var asHours = duration.asHours();\n      var baseAmt = 20;\n      var paymentAmt = 0;\n\n      if (asMinutes <= 60) {\n        paymentAmt = baseAmt;\n      } else {\n        var hour = Math.floor(asHours);\n        hour = hour - 2;\n\n        if (hour >= 1) {\n          paymentAmt = baseAmt + hour * 10;\n        } else {\n          paymentAmt = baseAmt;\n        }\n      }\n\n      console.log(\"Hiii PayableAmount\", paymentAmt);\n      obj.isAlloted = false;\n      obj.carNum = '';\n      obj.inTime = new Date();\n      var msg = \"Your payable amount is \" + paymentAmt;\n      _this.state.arrLot[index] = obj;\n\n      _this.setState({\n        dialogMsg: msg,\n        showDialog: true\n      });\n    };\n\n    console.log(\"props lot\", props.route.params.item);\n    var today = new Date();\n\n    var _start = moment(today);\n\n    var _end = moment(\"Thu Apr 07 2022 10:00:25\");\n\n    var _duration = moment.duration(_start.diff(_end));\n\n    var _asMinutes = _duration.asMinutes();\n\n    console.log(\"asMinutes\", _asMinutes);\n    _this.state = {\n      numLots: props.route.params.item,\n      arrLot: [],\n      showDialog: false,\n      carNumber: '',\n      showPaymentDialog: false,\n      error: '',\n      dialogTitle: '',\n      dialogMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(HomeController, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupAnArray();\n    }\n  }]);\n\n  return HomeController;\n}(Component);\n\nexport { HomeController as default };","map":{"version":3,"sources":["/Users/aarti/Desktop/AtharvaSystem/RNProject_Learning/ParkingManagementApp/src/screens/HomeController.tsx"],"names":["Component","moment","HomeController","props","setupAnArray","state","numLots","arrLot","i","dic","id","carNum","isAlloted","inTime","Date","push","setState","console","log","onChangeTextNumLot","val","carNumber","validateInput","strLot","error","onPressAddCar","name","validate","filter","item","length","min","max","random","Math","index","floor","tmp","arrIndex","Number","showDialog","onPressExitCar","obj","endDate","start","end","duration","diff","asMinutes","asHours","baseAmt","paymentAmt","hour","msg","dialogMsg","route","params","today","showPaymentDialog","dialogTitle"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport { lot } from '../model/lot';\nimport moment from 'moment'\n\ninterface props {\n    navigation: any;\n}\n\ninterface state {\n    numLots: number;\n    arrLot: Array<lot>;\n    showDialog: boolean;\n    carNumber: string;\n    error: string;\n    dialogTitle: string;\n    dialogMsg: string;\n}\n\nexport default class HomeController extends Component<props, state> {\n    constructor(props: any) {\n        super(props);\n        console.log(\"props lot\", props.route.params.item);\n\n        let today = new Date();\n\n\n        var start = moment(today); // another date\n        var end = moment(\"Thu Apr 07 2022 10:00:25\"); // another date\n\n        var duration = moment.duration(start.diff(end));\n        var asMinutes = duration.asMinutes()\n        console.log(\"asMinutes\", asMinutes)\n\n        this.state = {\n            numLots: props.route.params.item,\n            arrLot: [],\n            showDialog: false,\n            carNumber: '',\n            showPaymentDialog:false,\n            error: '',\n            dialogTitle: '',\n            dialogMsg: '',\n        }\n    }\n\n    componentDidMount() {\n        this.setupAnArray();\n    }\n\n    setupAnArray = () => {\n        const { numLots, arrLot } = this.state;\n\n        for (let i = 0; i < numLots; i++) {\n            let dic: lot = {\n                id: `${i}`,\n                carNum: \"\",\n                isAlloted: false,\n                inTime: new Date(),\n            }\n            arrLot.push(dic);\n        }\n\n        this.setState({});\n        console.log(\"this\", this.state.arrLot);\n    }\n\n    onChangeTextNumLot = (val: string) => {\n        this.setState({ carNumber: val });\n    }\n\n    validateInput = (strLot: string) => {\n        if (strLot === '') {\n            this.setState({ error: \"Please enter car number\" })\n            return false;\n        } else {\n            this.setState({ error: \"\" })\n            return true;\n        }\n    }\n\n    onPressAddCar = () => {\n        let name: string = this.state.carNumber;\n\n        let validate = this.validateInput(name);\n        if (validate) {\n\n            let filter = this.state.arrLot.filter(function (item) {\n                return item.isAlloted == false;\n            });\n\n            if (filter.length > 0) {\n\n                let min: number = 0;\n                let max: number = (filter.length - 1);\n\n                let random: number = min + (Math.random() * (max - min))\n                console.log(\"random\", random);\n                var index = Math.floor(random);; //10\n\n                var tmp: lot = filter[index];\n                let arrIndex = Number(tmp.id);\n\n                tmp.isAlloted = true;\n                tmp.carNum = name;\n                tmp.inTime = new Date();\n\n                this.state.arrLot[arrIndex] = tmp\n                this.setState({ carNumber: \"\" });\n\n            } else {\n                this.setState({ showDialog: true, carNumber: \"\" });\n            }\n        }\n    }\n\n    onPressExitCar = (index: number) => {\n\n        let obj = this.state.arrLot[index];\n        let endDate = new Date();\n\n        var start = moment(obj.inTime); // another date\n        var end = moment(endDate); // another date\n\n        var duration = moment.duration(start.diff(end));\n        var asMinutes = duration.asMinutes()\n        var asHours = duration.asHours()\n\n        var baseAmt : number = 20;\n        var paymentAmt = 0;\n        if(asMinutes <= 60) {\n            paymentAmt = baseAmt;\n        } else {\n            var hour = Math.floor(asHours);\n            hour = hour - 2\n            if(hour >= 1) {\n                paymentAmt = baseAmt + (hour * 10);\n            } else {\n                paymentAmt = baseAmt;\n            }\n        }\n\n        console.log(\"Hiii PayableAmount\", paymentAmt);\n\n        obj.isAlloted = false;\n        obj.carNum = '';\n        obj.inTime = new Date();\n\n        let msg = `Your payable amount is ${paymentAmt}`\n\n        this.state.arrLot[index] = obj;\n        this.setState({dialogMsg: msg, showDialog: true});\n    }\n}"]},"metadata":{},"sourceType":"module"}